Build started 2016/2/29 17:42:02.
     1>Project "D:\Github\CRF\CRF\crf_learn\crf_learn\crf_learn.vcxproj" on node 2 (Rebuild target(s)).
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\bin\CL.exe /c /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _CONSOLE /D _UNICODE /D UNICODE /Gm /EHsc /RTC1 /MDd /GS /Zc:wchar_t /Zc:forScope /Fo"Debug\\" /Fd"Debug\vc110.pdb" /Gd /TP /analyze- /errorReport:prompt crf_learn.cpp encoder.cpp feature.cpp feature_cache.cpp feature_index.cpp lbfgs.cpp libcrfpp.cpp node.cpp param.cpp path.cpp tagger.cpp
         tagger.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\common.h(129): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h(357) : see declaration of 'sprintf'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(86): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(92): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.h(158): warning C4244: 'return' : conversion from 'double' to 'float', possible loss of data
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(37): warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(191) : see declaration of 'strncpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(731): warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(191) : see declaration of 'strncpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(773): warning C4273: 'CRFPP::createTagger' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(347) : see previous definition of 'createTagger'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(783): warning C4273: 'CRFPP::createTagger' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(351) : see previous definition of 'createTagger'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(793): warning C4273: 'CRFPP::createModel' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(355) : see previous definition of 'createModel'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(804): warning C4273: 'CRFPP::createModelFromArray' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(358) : see previous definition of 'createModelFromArray'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(814): warning C4273: 'CRFPP::createModel' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(364) : see previous definition of 'createModel'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(825): warning C4273: 'CRFPP::createModelFromArray' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(367) : see previous definition of 'createModelFromArray'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(835): warning C4273: 'CRFPP::getTaggerError' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(372) : see previous definition of 'getTaggerError'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(839): warning C4273: 'CRFPP::getLastError' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(375) : see previous definition of 'getLastError'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(894): warning C4273: 'crfpp_test' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(91) : see previous definition of 'crfpp_test'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.cpp(900): warning C4273: 'crfpp_test2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(92) : see previous definition of 'crfpp_test2'
         path.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\common.h(129): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h(357) : see declaration of 'sprintf'
         param.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(86): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(92): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\common.h(129): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h(357) : see declaration of 'sprintf'
     1>d:\github\crf\crf\crf_learn\crf_learn\param.cpp(201): warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(191) : see declaration of 'strncpy'
         node.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\common.h(129): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h(357) : see declaration of 'sprintf'
         libcrfpp.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(86): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(92): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(61): warning C4273: 'crfpp_model_new' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(45) : see previous definition of 'crfpp_model_new'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(69): warning C4273: 'crfpp_model_new2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(46) : see previous definition of 'crfpp_model_new2'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(79): warning C4273: 'crfpp_model_from_array_new' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(47) : see previous definition of 'crfpp_model_from_array_new'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(90): warning C4273: 'crfpp_model_from_array_new2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(48) : see previous definition of 'crfpp_model_from_array_new2'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(99): warning C4273: 'crfpp_model_get_template' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(49) : see previous definition of 'crfpp_model_get_template'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(104): warning C4273: 'crfpp_model_destroy' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(50) : see previous definition of 'crfpp_model_destroy'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(109): warning C4273: 'crfpp_model_strerror' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(51) : see previous definition of 'crfpp_model_strerror'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(116): warning C4273: 'crfpp_model_new_tagger' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(52) : see previous definition of 'crfpp_model_new_tagger'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(121): warning C4273: 'crfpp_new' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(54) : see previous definition of 'crfpp_new'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(137): warning C4273: 'crfpp_strerror' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(95) : see previous definition of 'crfpp_strerror'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(144): warning C4273: 'crfpp_destroy' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(56) : see previous definition of 'crfpp_destroy'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(149): warning C4273: 'crfpp_set_model' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(57) : see previous definition of 'crfpp_set_model'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(154): warning C4273: 'crfpp_add2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(58) : see previous definition of 'crfpp_add2'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(158): warning C4273: 'crfpp_add' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(59) : see previous definition of 'crfpp_add'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(162): warning C4273: 'crfpp_size' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(60) : see previous definition of 'crfpp_size'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(166): warning C4273: 'crfpp_xsize' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(61) : see previous definition of 'crfpp_xsize'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(170): warning C4273: 'crfpp_result' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(64) : see previous definition of 'crfpp_result'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(174): warning C4273: 'crfpp_answer' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(65) : see previous definition of 'crfpp_answer'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(178): warning C4273: 'crfpp_y' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(66) : see previous definition of 'crfpp_y'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(182): warning C4273: 'crfpp_ysize' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(67) : see previous definition of 'crfpp_ysize'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(186): warning C4273: 'crfpp_prob' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(68) : see previous definition of 'crfpp_prob'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(190): warning C4273: 'crfpp_prob2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(69) : see previous definition of 'crfpp_prob2'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(194): warning C4273: 'crfpp_prob3' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(70) : see previous definition of 'crfpp_prob3'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(198): warning C4273: 'crfpp_set_penalty' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(71) : see previous definition of 'crfpp_set_penalty'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(202): warning C4273: 'crfpp_penalty' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(72) : see previous definition of 'crfpp_penalty'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(206): warning C4273: 'crfpp_alpha' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(73) : see previous definition of 'crfpp_alpha'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(210): warning C4273: 'crfpp_beta' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(74) : see previous definition of 'crfpp_beta'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(214): warning C4273: 'crfpp_best_cost' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(80) : see previous definition of 'crfpp_best_cost'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(218): warning C4273: 'crfpp_emisstion_cost' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(75) : see previous definition of 'crfpp_emisstion_cost'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(226): warning C4273: 'crfpp_next_transition_cost' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(76) : see previous definition of 'crfpp_next_transition_cost'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(230): warning C4273: 'crfpp_prev_transition_cost' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(78) : see previous definition of 'crfpp_prev_transition_cost'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(235): warning C4273: 'crfpp_next_transition_vector' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(82) : see previous definition of 'crfpp_next_transition_vector'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(240): warning C4273: 'crfpp_prev_transition_vector' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(84) : see previous definition of 'crfpp_prev_transition_vector'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(244): warning C4273: 'crfpp_dsize' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(62) : see previous definition of 'crfpp_dsize'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(248): warning C4273: 'crfpp_weight_vector' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(63) : see previous definition of 'crfpp_weight_vector'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(252): warning C4273: 'crfpp_Z' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(86) : see previous definition of 'crfpp_Z'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(256): warning C4273: 'crfpp_parse' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(87) : see previous definition of 'crfpp_parse'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(260): warning C4273: 'crfpp_empty' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(88) : see previous definition of 'crfpp_empty'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(264): warning C4273: 'crfpp_clear' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(89) : see previous definition of 'crfpp_clear'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(268): warning C4273: 'crfpp_next' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(90) : see previous definition of 'crfpp_next'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(272): warning C4273: 'crfpp_yname' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(96) : see previous definition of 'crfpp_yname'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(276): warning C4273: 'crfpp_y2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(97) : see previous definition of 'crfpp_y2'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(280): warning C4273: 'crfpp_x' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(98) : see previous definition of 'crfpp_x'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(284): warning C4273: 'crfpp_x2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(99) : see previous definition of 'crfpp_x2'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(288): warning C4273: 'crfpp_parse_tostr' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(100) : see previous definition of 'crfpp_parse_tostr'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(292): warning C4273: 'crfpp_parse_tostr2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(101) : see previous definition of 'crfpp_parse_tostr2'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(297): warning C4273: 'crfpp_parse_tostr3' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(103) : see previous definition of 'crfpp_parse_tostr3'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(301): warning C4273: 'crfpp_tostr' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(105) : see previous definition of 'crfpp_tostr'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(305): warning C4273: 'crfpp_tostr2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(106) : see previous definition of 'crfpp_tostr2'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(309): warning C4273: 'crfpp_set_vlevel' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(108) : see previous definition of 'crfpp_set_vlevel'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(313): warning C4273: 'crfpp_vlevel' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(109) : see previous definition of 'crfpp_vlevel'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(317): warning C4273: 'crfpp_set_cost_factor' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(110) : see previous definition of 'crfpp_set_cost_factor'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(321): warning C4273: 'crfpp_cost_factor' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(111) : see previous definition of 'crfpp_cost_factor'
     1>d:\github\crf\crf\crf_learn\crf_learn\libcrfpp.cpp(325): warning C4273: 'crfpp_set_nbest' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(112) : see previous definition of 'crfpp_set_nbest'
         lbfgs.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\common.h(129): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h(357) : see declaration of 'sprintf'
     1>c:\program files (x86)\microsoft visual studio 11.0\vc\include\numeric(108): warning C4996: 'std::_Inner_product1': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\numeric(92) : see declaration of 'std::_Inner_product1'
                 d:\github\crf\crf\crf_learn\crf_learn\lbfgs.cpp(54) : see reference to function template instantiation '_Ty std::inner_product<const double*,const double*,double>(_InIt1,_InIt1,_InIt2,_Ty)' being compiled
                 with
                 [
                     _Ty=double,
                     _InIt1=const double *,
                     _InIt2=const double *
                 ]
         feature_index.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\common.h(129): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h(357) : see declaration of 'sprintf'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(86): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(92): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\feature_index.cpp(47): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\darts.h(189): warning C4146: unary minus operator applied to unsigned type, result still unsigned
                 d:\github\crf\crf\crf_learn\crf_learn\darts.h(129) : while compiling class template member function 'size_t CRFPP::Darts::DoubleArrayImpl<node_type_,node_u_type_,array_type_,array_u_type_>::insert(const std::vector<_Ty> &)'
                 with
                 [
                     node_type_=char,
                     node_u_type_=unsigned char,
                     array_type_=int,
                     array_u_type_=unsigned int,
                     _Ty=CRFPP::Darts::DoubleArrayImpl<char,unsigned char,int,unsigned int>::node_t
                 ]
                 d:\github\crf\crf\crf_learn\crf_learn\darts.h(292) : see reference to function template instantiation 'size_t CRFPP::Darts::DoubleArrayImpl<node_type_,node_u_type_,array_type_,array_u_type_>::insert(const std::vector<_Ty> &)' being compiled
                 with
                 [
                     node_type_=char,
                     node_u_type_=unsigned char,
                     array_type_=int,
                     array_u_type_=unsigned int,
                     _Ty=CRFPP::Darts::DoubleArrayImpl<char,unsigned char,int,unsigned int>::node_t
                 ]
                 d:\github\crf\crf\crf_learn\crf_learn\feature_index.h(125) : see reference to class template instantiation 'CRFPP::Darts::DoubleArrayImpl<node_type_,node_u_type_,array_type_,array_u_type_>' being compiled
                 with
                 [
                     node_type_=char,
                     node_u_type_=unsigned char,
                     array_type_=int,
                     array_u_type_=unsigned int
                 ]
         feature_cache.cpp
     1>c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility(2176): warning C4996: 'std::_Copy_impl': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility(2157) : see declaration of 'std::_Copy_impl'
                 d:\github\crf\crf\crf_learn\crf_learn\feature_cache.cpp(15) : see reference to function template instantiation '_OutIt std::copy<std::_Vector_const_iterator<_Myvec>,int*>(_InIt,_InIt,_OutIt)' being compiled
                 with
                 [
                     _OutIt=int *,
                     _Myvec=std::_Vector_val<std::_Simple_types<int>>,
                     _InIt=std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int>>>
                 ]
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility(2157) : see declaration of 'std::_Copy_impl'
         feature.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\common.h(129): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h(357) : see declaration of 'sprintf'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(86): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(92): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.h(158): warning C4244: 'return' : conversion from 'double' to 'float', possible loss of data
         encoder.cpp
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(86): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\scoped_ptr.h(92): warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h(110) : see declaration of 'strcpy'
     1>d:\github\crf\crf\crf_learn\crf_learn\common.h(129): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h(357) : see declaration of 'sprintf'
     1>d:\github\crf\crf\crf_learn\crf_learn\tagger.h(158): warning C4244: 'return' : conversion from 'double' to 'float', possible loss of data
     1>d:\github\crf\crf\crf_learn\crf_learn\encoder.cpp(157): warning C4244: '+=' : conversion from 'double' to 'float', possible loss of data
     1>d:\github\crf\crf\crf_learn\crf_learn\encoder.cpp(396): warning C4244: 'argument' : conversion from 'double' to 'float', possible loss of data
     1>d:\github\crf\crf\crf_learn\crf_learn\encoder.cpp(402): warning C4244: 'argument' : conversion from 'double' to 'float', possible loss of data
     1>d:\github\crf\crf\crf_learn\crf_learn\encoder.cpp(408): warning C4244: 'argument' : conversion from 'double' to 'float', possible loss of data
     1>d:\github\crf\crf\crf_learn\crf_learn\encoder.cpp(515): warning C4273: 'crfpp_learn2' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(94) : see previous definition of 'crfpp_learn2'
     1>d:\github\crf\crf\crf_learn\crf_learn\encoder.cpp(521): warning C4273: 'crfpp_learn' : inconsistent dll linkage
                 d:\github\crf\crf\crf_learn\crf_learn\crfpp.h(93) : see previous definition of 'crfpp_learn'
     1>c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility(2646): warning C4244: '=' : conversion from 'const double' to 'float', possible loss of data
                 c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility(2669) : see reference to function template instantiation 'void std::_Fill<float*,_Ty>(_FwdIt,_FwdIt,const _Ty &)' being compiled
                 with
                 [
                     _Ty=double,
                     _FwdIt=float *
                 ]
                 d:\github\crf\crf\crf_learn\crf_learn\encoder.cpp(107) : see reference to function template instantiation 'void std::fill<std::_Vector_iterator<_Myvec>,double>(_FwdIt,_FwdIt,const _Ty &)' being compiled
                 with
                 [
                     _Myvec=std::_Vector_val<std::_Simple_types<float>>,
                     _FwdIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float>>>,
                     _Ty=double
                 ]
         crf_learn.cpp
         Generating Code...
       Link:
         C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\bin\link.exe /ERRORREPORT:PROMPT /OUT:"D:\Github\CRF\CRF\crf_learn\Debug\crf_learn.exe" /INCREMENTAL /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"D:\Github\CRF\CRF\crf_learn\Debug\crf_learn.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:\Github\CRF\CRF\crf_learn\Debug\crf_learn.lib" /MACHINE:X86 Debug\crf_learn.obj
         Debug\encoder.obj
         Debug\feature.obj
         Debug\feature_cache.obj
         Debug\feature_index.obj
         Debug\lbfgs.obj
         Debug\libcrfpp.obj
         Debug\node.obj
         Debug\param.obj
         Debug\path.obj
         Debug\tagger.obj
            Creating library D:\Github\CRF\CRF\crf_learn\Debug\crf_learn.lib and object D:\Github\CRF\CRF\crf_learn\Debug\crf_learn.exp
     1>crf_learn.obj : warning LNK4217: locally defined symbol _crfpp_learn imported in function "int __cdecl wmain_to_main_wrapper(int,char * *)" (?wmain_to_main_wrapper@@YAHHPAPAD@Z)
     1>libcrfpp.obj : warning LNK4217: locally defined symbol ?createTagger@CRFPP@@YAPAVTagger@1@HPAPAD@Z (class CRFPP::Tagger * __cdecl CRFPP::createTagger(int,char * *)) imported in function _crfpp_new
     1>libcrfpp.obj : warning LNK4217: locally defined symbol ?createTagger@CRFPP@@YAPAVTagger@1@PBD@Z (class CRFPP::Tagger * __cdecl CRFPP::createTagger(char const *)) imported in function "struct crfpp_t * __cdecl crfpp_new2(char *)" (?crfpp_new2@@YAPAUcrfpp_t@@PAD@Z)
     1>libcrfpp.obj : warning LNK4217: locally defined symbol ?createModel@CRFPP@@YAPAVModel@1@HPAPAD@Z (class CRFPP::Model * __cdecl CRFPP::createModel(int,char * *)) imported in function _crfpp_model_new
     1>libcrfpp.obj : warning LNK4217: locally defined symbol ?createModelFromArray@CRFPP@@YAPAVModel@1@HPAPADPBDI@Z (class CRFPP::Model * __cdecl CRFPP::createModelFromArray(int,char * *,char const *,unsigned int)) imported in function _crfpp_model_from_array_new
     1>libcrfpp.obj : warning LNK4217: locally defined symbol ?createModel@CRFPP@@YAPAVModel@1@PBD@Z (class CRFPP::Model * __cdecl CRFPP::createModel(char const *)) imported in function _crfpp_model_new2
     1>libcrfpp.obj : warning LNK4217: locally defined symbol ?createModelFromArray@CRFPP@@YAPAVModel@1@PBD0I@Z (class CRFPP::Model * __cdecl CRFPP::createModelFromArray(char const *,char const *,unsigned int)) imported in function _crfpp_model_from_array_new2
     1>libcrfpp.obj : warning LNK4217: locally defined symbol ?getLastError@CRFPP@@YAPBDXZ (char const * __cdecl CRFPP::getLastError(void)) imported in function _crfpp_model_strerror
         crf_learn.vcxproj -> D:\Github\CRF\CRF\crf_learn\Debug\crf_learn.exe
     1>Done Building Project "D:\Github\CRF\CRF\crf_learn\crf_learn\crf_learn.vcxproj" (Rebuild target(s)).

Build succeeded.

Time Elapsed 00:00:10.92
